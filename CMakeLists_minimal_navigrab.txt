cmake_minimum_required(VERSION 3.20)
set(CMAKE_POLICY_VERSION_MINIMUM 3.5)
project(MinimalNaviGrabTest VERSION 1.0.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

# Include directories
include_directories(
    ${CMAKE_SOURCE_DIR}/src
    ${CMAKE_SOURCE_DIR}/src/navigrab
    ${CMAKE_SOURCE_DIR}
)

# Third-party dependencies
include(FetchContent)

# nlohmann/json
FetchContent_Declare(
    nlohmann_json
    GIT_REPOSITORY https://github.com/nlohmann/json.git
    GIT_TAG v3.11.2
)
FetchContent_MakeAvailable(nlohmann_json)

# spdlog for logging
FetchContent_Declare(
    spdlog
    GIT_REPOSITORY https://github.com/gabime/spdlog.git
    GIT_TAG v1.11.0
)
FetchContent_MakeAvailable(spdlog)

# Create NaviGrab library
add_library(navigrab_core
    src/navigrab/navigrab_core.cpp
    src/navigrab/proactive_scraper.cpp
)

# Link NaviGrab libraries
target_link_libraries(navigrab_core
    nlohmann_json::nlohmann_json
    spdlog::spdlog
)

# Create minimal test executable
add_executable(minimal_navigrab_test
    minimal_navigrab_test.cpp
)

target_link_libraries(minimal_navigrab_test
    navigrab_core
    nlohmann_json::nlohmann_json
    spdlog::spdlog
)

# Install targets
install(TARGETS
    navigrab_core
    minimal_navigrab_test
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
)
