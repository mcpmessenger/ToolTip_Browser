cmake_minimum_required(VERSION 3.20)
project(ChromiumFresh_NaviGrab_Integration VERSION 1.0.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

# Real Chromium Integration Configuration
set(CHROMIUM_ROOT_DIR "${CMAKE_SOURCE_DIR}/chrome" CACHE PATH "Path to Chromium source directory")
set(CHROMIUM_OUT_DIR "${CMAKE_SOURCE_DIR}/out/Release" CACHE PATH "Path to Chromium build output")

# Include Chromium build configuration
if(EXISTS "${CHROMIUM_ROOT_DIR}/BUILD.gn")
    message(STATUS "Found Chromium source at: ${CHROMIUM_ROOT_DIR}")
    add_compile_definitions(USE_REAL_CHROMIUM=ON)
else()
    message(WARNING "Chromium source not found, using mock implementation")
    add_compile_definitions(USE_REAL_CHROMIUM=OFF)
endif()

# Include directories for real Chromium integration
include_directories(
    ${CMAKE_SOURCE_DIR}/include
    ${CMAKE_SOURCE_DIR}/src
    ${CMAKE_SOURCE_DIR}/src/chromium_integration
    ${CHROMIUM_ROOT_DIR}
    ${CHROMIUM_ROOT_DIR}/base
    ${CHROMIUM_ROOT_DIR}/content/public
    ${CHROMIUM_ROOT_DIR}/ui
    ${CHROMIUM_ROOT_DIR}/chrome/browser/tooltip
    ${CHROMIUM_ROOT_DIR}/chrome/browser/ui/views/tooltip
)

# Add NaviGrab as a subdirectory
add_subdirectory(NaviGrab)

# Real Chromium Integration Library
add_library(chromium_fresh_integration
    src/chromium_integration/real_chromium_bridge.cpp
    src/api/unified_api_server.cpp
)

# Link with real Chromium libraries if available
if(USE_REAL_CHROMIUM)
    # Link with actual Chromium libraries
    target_link_libraries(chromium_fresh_integration
        # Chromium base libraries
        base
        content
        ui
        # Tooltip-specific libraries
        tooltip_service
        tooltip_ai_integration
        tooltip_screenshot_capture
        tooltip_dark_mode_manager
        # NaviGrab core
        chromium_playwright_core
    )
    
    # Set Chromium-specific compile definitions
    target_compile_definitions(chromium_fresh_integration
        PRIVATE
            USE_REAL_CHROMIUM=ON
            CHROMIUM_FRESH_INTEGRATION=ON
    )
else()
    # Fallback to mock implementation
    target_link_libraries(chromium_fresh_integration
        chromium_playwright_core
    )
    
    target_compile_definitions(chromium_fresh_integration
        PRIVATE
            USE_REAL_CHROMIUM=OFF
            USE_MOCK_CHROMIUM=ON
    )
endif()

# Integration examples using real Chromium
add_executable(real_chromium_demo examples/real_chromium_demo.cpp)
target_link_libraries(real_chromium_demo chromium_fresh_integration)

add_executable(tooltip_automation_demo examples/tooltip_automation_demo.cpp)
target_link_libraries(tooltip_automation_demo chromium_fresh_integration)

add_executable(web_automation_demo examples/web_automation_demo.cpp)
target_link_libraries(web_automation_demo chromium_fresh_integration)

# Unified API server
add_executable(unified_api_server src/api/unified_api_server.cpp)
target_link_libraries(unified_api_server chromium_fresh_integration)

# Integration tests
enable_testing()
add_executable(chromium_fresh_integration_test tests/integration/chromium_fresh_integration_test.cpp)
target_link_libraries(chromium_fresh_integration_test chromium_fresh_integration gtest_main gmock_main)
add_test(NAME chromium_fresh_integration_test COMMAND chromium_fresh_integration_test)

add_executable(navigrab_integration_test tests/integration/navigrab_integration_test.cpp)
target_link_libraries(navigrab_integration_test chromium_fresh_integration gtest_main gmock_main)
add_test(NAME navigrab_integration_test COMMAND navigrab_integration_test)

# Install targets
install(TARGETS 
    chromium_fresh_integration
    unified_api_server 
    web_automation_demo 
    tooltip_automation_demo
    real_chromium_demo
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
)

# Print configuration summary
message(STATUS "")
message(STATUS "ChromiumFresh + NaviGrab Integration Configuration:")
message(STATUS "  Version: ${PROJECT_VERSION}")
message(STATUS "  Build Type: ${CMAKE_BUILD_TYPE}")
message(STATUS "  C++ Standard: ${CMAKE_CXX_STANDARD}")
message(STATUS "  Chromium Root: ${CHROMIUM_ROOT_DIR}")
message(STATUS "  Use Real Chromium: ${USE_REAL_CHROMIUM}")
message(STATUS "  Install Prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "")

